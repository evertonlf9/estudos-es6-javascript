{"version":3,"sources":["../../app/controllers/NegociacaoController.js"],"names":["CurrentInstance","negociacaoController","ListaNegociacoes","Message","Negociacao","NegociacoesView","MessageView","NegociacaoService","DateHelper","Bind","NegociacaoController","$","document","querySelector","bind","_inputData","_inputValor","_inputQtd","_ordemAtual","_service","_listaNegociacoes","_message","_initialize","_listAllIndexDB","negociacao","_create","data","date","quantidade","qtd","valor","value","setNegociacaoServer","then","focus","texto","resp","catch","error","event","preventDefault","_addIndexDB","textToDate","parseInt","parseFloat","col","orderByListReverse","orderByList","a","b","e","import","negociacoes","reduce","list","arr","concat","forEach","add","Date","element","text","_negociacoesView","update","_messageView","_removeIndexDB","removeAll","remove","message","listAll","item","register","_clearForm"],"mappings":"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","file":"NegociacaoController.js","sourcesContent":["import { ListaNegociacoes } from \"../models/ListaNegociacoes.js\";\r\nimport { Message } from \"../models/Message.js\";\r\nimport { Negociacao } from \"../models/Negociacao.js\";\r\n\r\nimport { NegociacoesView } from \"../view/NegociacoesView.js\";\r\nimport { MessageView } from \"../view/MessageView.js\";\r\n\r\nimport { NegociacaoService } from \"../services/NegociacaoService.js\";\r\n\r\nimport { DateHelper } from \"../helpers/DateHelper.js\";\r\nimport { Bind } from \"../helpers/Bind.js\";\r\n\r\nclass NegociacaoController {\r\n\r\n    constructor(){\r\n        let $ = document.querySelector.bind(document);\r\n        \r\n        this._inputData = $('#data');\r\n        this._inputValor = $(\"#valor\");\r\n        this._inputQtd = $(\"#quantidade\");\r\n        this._ordemAtual = '';\r\n        this._service = new NegociacaoService();  \r\n\r\n        //codigo inicial\r\n        // this._listaNegociacoes = new ListaNegociacoes();       \r\n        // this._message = new Message('');\r\n        // this._messageView.update(this._message);\r\n        // this._negociacoesView.update(this._listaNegociacoes);\r\n\r\n        //Exemplo de uso do proxy - Estrutura(proxy é uma copia do original- trigger eventos traps  - object original)\r\n        // Proxy Ele serve como um placeholder de um objeto real\r\n        // let self = this;\r\n        // this._listaNegociacoes = new Proxy(new ListaNegociacoes(new Date(), 1, 100), {\r\n        //     get(target, prop, receiver) {\r\n        //         if(['add', 'remove'].includes(prop) && typeof(target[prop]) === typeof(Function)){\r\n        //             return function (){\r\n        //                 console.log(`interceptando \"${prop}\"`);\r\n        //                 Reflect.apply(target[prop], target, arguments);\r\n        //                 self._negociacoesView.update(this._listaNegociacoes);\r\n        //             }\r\n        //         }\r\n        //         return Reflect.get(target, prop, receiver);\r\n        //     },\r\n        //     set(target, prop, value, receiver) {\r\n        //         console.log(`\"${prop}\" interceptada valor anterior \"${target[prop]}\" novo valor ${value}`);\r\n        //         return Reflect.set(target, prop, value, receiver);\r\n        //     }\r\n        // });\r\n\r\n        //re-escrevendo o codigo acima\r\n        // this._listaNegociacoes = ProxyFactory.create(new ListaNegociacoes(), this._negociacoesView, ['add', 'remove']);\r\n        // this._message = ProxyFactory.create(new Message(), ['texto'], (model)=> this._messageView.update(model));\r\n\r\n        // this._negociacoesView = new NegociacoesView($('#negociacoesView'));\r\n        // this._messageView = new MessageView($(\"#alert\")); \r\n\r\n        //re-escrevendo o codigo acima\r\n        this._listaNegociacoes = new Bind(new ListaNegociacoes(), new NegociacoesView($('#negociacoesView')), 'add', 'remove', 'orderByList', 'orderByListReverse');\r\n        this._message = new Bind(new Message(), new MessageView($(\"#alert\")), 'texto'); \r\n        \r\n        this._initialize();\r\n    }\r\n\r\n    _initialize() {\r\n\r\n        this._listAllIndexDB();       \r\n\r\n        // setInterval(() => {\r\n        //     this.import();\r\n        // }, 3000);\r\n    }\r\n\r\n    addNegociacaoServer(){\r\n        const negociacao = this._create();\r\n        const data = {\r\n            data: negociacao.date, \r\n            quantidade: negociacao.qtd,\r\n            valor: negociacao.value\r\n        }\r\n\r\n        this._service.setNegociacaoServer(data)\r\n        .then(resp => {\r\n            this._inputData.value = '';\r\n            this._inputQtd.value = 1;\r\n            this._inputValor.value = 0.0;\r\n            this._inputData.focus();\r\n            this._message.texto = resp;\r\n        })\r\n        .catch(error =>{\r\n            this._message.texto = error;\r\n        })\r\n    }\r\n\r\n    add(event) {\r\n        event.preventDefault();   \r\n\r\n        this._addIndexDB();\r\n\r\n        // // this._listaNegociacoes.setNegociacoes = this._create();\r\n\r\n        // this._message.texto = 'Negociação adcionado com sucesso!';\r\n        // this._listaNegociacoes.add(this._create());\r\n        // //remover os update usando proxy\r\n        // // this._update('Negociação adcionado com sucesso!');\r\n        // this._clearForm();\r\n    }\r\n\r\n    _create() {\r\n        return new Negociacao (\r\n            DateHelper.textToDate(this._inputData.value),\r\n            parseInt(this._inputQtd.value),\r\n            parseFloat(this._inputValor.value)\r\n        );\r\n    }\r\n\r\n    _clearForm () {\r\n        this._inputData.value = ''\r\n        this._inputValor.value = 0.0;\r\n        this._inputQtd.value = 1;\r\n\r\n        this._inputData.focus();\r\n    }\r\n\r\n    orderBy(col) {\r\n        \r\n        if(this._ordemAtual == col) {\r\n            this._listaNegociacoes.orderByListReverse();\r\n        } else {\r\n            this._listaNegociacoes.orderByList((a, b) => a[col] - b[col]); \r\n        }\r\n\r\n        this._ordemAtual = col;\r\n    }\r\n\r\n    import(e) {\r\n        e.preventDefault(); \r\n\r\n        this._service\r\n            .import(this._listaNegociacoes.negociacoes)\r\n            .then(data => {\r\n                data\r\n                .reduce((list, arr) => list.concat(arr), [])\r\n                .forEach(element => this._listaNegociacoes.add(new Negociacao (new Date(element.data), element.quantidade,  element.valor)));                \r\n                this._message.texto = 'Negociações importadas com sucesso!'\r\n            })\r\n            .catch(error => this._message.texto = error);\r\n\r\n        // this._service.getAll()\r\n        //     .then(res => res.filter((item) => \r\n        //         !this._listaNegociacoes.negociacoes.some( (itemExist) => {\r\n        //             JSON.stringify(item) == JSON.stringify(itemExist)\r\n        //         }) \r\n        //     ))\r\n        //     .then(data => {\r\n        //         console.log(data);\r\n        //         data\r\n        //         .reduce((list, arr) => list.concat(arr), [])\r\n        //         .forEach(element => this._listaNegociacoes.add(new Negociacao (new Date(element.data), element.quantidade,  element.valor)));                \r\n        //         this._message.texto = 'Negociações importadas com sucesso!'\r\n        //     })\r\n        //     .catch(error => this._message.texto = error);  \r\n\r\n\r\n        // service.getSemana()\r\n        // .then(data => {\r\n        //     data.forEach(element => this._listaNegociacoes.add(new Negociacao (new Date(element.data), element.quantidade,  element.valor)));\r\n        //     this._message.texto = 'Negociações importadas com sucesso!'\r\n        // })\r\n        // .catch(error => this._message.texto = error);\r\n\r\n        // service.getAnterior()\r\n        // .then(data => {\r\n        //     data.forEach(element => this._listaNegociacoes.add(new Negociacao (new Date(element.data), element.quantidade,  element.valor)));\r\n        //     this._message.texto = 'Negociações importadas com sucesso!'\r\n        // })\r\n        // .catch(error => this._message.texto = error);\r\n\r\n        // service.getRetrasada()\r\n        // .then(data => {\r\n        //     data.forEach(element => this._listaNegociacoes.add(new Negociacao (new Date(element.data), element.quantidade,  element.valor)));\r\n        //     this._message.texto = 'Negociações importadas com sucesso!'\r\n        // })\r\n        // .catch(error => this._message.texto = error);        \r\n    }\r\n\r\n    _update(text) {\r\n        this._message.texto = text;        \r\n        this._negociacoesView.update(this._listaNegociacoes);\r\n        this._messageView.update(this._message);\r\n    }\r\n\r\n    remove(e) {\r\n        e.preventDefault(); \r\n        \r\n        this._removeIndexDB();\r\n        // this._listaNegociacoes.remove();\r\n        // this._update('Lista apagada com sucesso!');\r\n    }\r\n\r\n    _removeIndexDB() {\r\n        this._service\r\n            .removeAll()\r\n            .then(message => {\r\n                this._listaNegociacoes.remove();\r\n                this._message.texto = message;\r\n            })\r\n            .catch(error => this._message.texto = error);\r\n    }\r\n\r\n    _listAllIndexDB() {\r\n        this._service\r\n            .listAll()\r\n            .then(data => data.forEach(item => this._listaNegociacoes.add(item)))\r\n            .catch(error => this._message.texto = error);\r\n    }\r\n\r\n    _addIndexDB() {\r\n        let data = this._create();\r\n\r\n        this._service\r\n            .register(data)\r\n            .then(message => {\r\n                this._listaNegociacoes.add(data);\r\n                this._message.texto = message;\r\n                this._clearForm();\r\n            })\r\n            .catch(error => this._message.texto = error);\r\n    }\r\n\r\n}\r\n\r\nlet negociacaoController = new NegociacaoController();\r\nexport function CurrentInstance() {\r\n    return negociacaoController;\r\n}"]}
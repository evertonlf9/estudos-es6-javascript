{"version":3,"sources":["../../app/dao/NegociacaoDao.js"],"names":["ConnectionFactory","Negociacao","NegociacaoDao","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","e","onerror","console","log","target","error","cursor","openCursor","negociacoes","atual","result","dado","value","push","_date","_qtd","_value","continue","clear","getConnection","then","store","Date","abort","onabort"],"mappings":"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","file":"NegociacaoDao.js","sourcesContent":["// http://aaronpowell.github.io/db.js/\r\n// https://dexie.org/\r\nimport {ConnectionFactory} from '../services/ConnectionFactory.js';\r\nimport { Negociacao } from \"../models/Negociacao.js\";\r\n\r\nexport class NegociacaoDao {\r\n\r\n    constructor(connection) {\r\n        this._connection = connection;\r\n        this._store = 'negociacoes';\r\n    }\r\n\r\n    add(negociacao) {\r\n\r\n        return new Promise((resolve, reject) => {\r\n            let request = this._connection\r\n            .transaction([this._store], \"readwrite\")\r\n            .objectStore(this._store)\r\n            .add(negociacao); \r\n\r\n            request.onsuccess = (e) => {\r\n                resolve();\r\n            };\r\n\r\n            request.onerror = e => {\r\n                console.log(e.target.error);\r\n                reject('Não foi possível adicionar a negociação');\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    listAll() {\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            let cursor = this._connection\r\n                .transaction([this._store], \"readwrite\")\r\n                .objectStore(this._store)\r\n                .openCursor();\r\n\r\n                let negociacoes = [];\r\n                cursor.onsuccess = e => {\r\n                    let atual = e.target.result;\r\n                \r\n                    if(atual) {\r\n                \r\n                        let dado = atual.value;                \r\n                        negociacoes.push(new Negociacao(dado._date, dado._qtd, dado._value));                \r\n                        atual.continue();\r\n                    } else {                \r\n                        resolve(negociacoes);\r\n                    }\r\n                }\r\n\r\n                cursor.onerror = e => {\r\n                    console.log(e.target.error);\r\n                    reject('Não foi possível listar as negociações');\r\n                }\r\n        });\r\n    }\r\n\r\n    removeAll() {\r\n        return new Promise((resolve, reject) => {\r\n            let request = this._connection\r\n                .transaction([this._store], \"readwrite\")\r\n                .objectStore(this._store)\r\n                .clear();\r\n\r\n            request.onsuccess = e => resolve('Negociações removidos com sucesso!');\r\n            request.onerror = e => reject('Não foi possível remover as negociações!');\r\n        });\r\n    }\r\n\r\n    abort() {\r\n        ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => {\r\n                    let transaction = connection.transaction(['negociacoes'], 'readwrite');\r\n                    let store = transaction.objectStore('negociacoes');\r\n                    let negociacao = new Negociacao(new Date(), 1, 200);\r\n                    let request = store.add(negociacao);\r\n\r\n                    // #### VAI CANCELAR A TRANSAÇÃO. O evento onabort será chamado.\r\n                    transaction.abort(); \r\n                    transaction.onabort = e => {\r\n                        console.log(e);\r\n                        console.log('Transação abortada');\r\n                    };\r\n\r\n                    request.onsuccess = e => {\r\n\r\n                        console.log('Negociação incluida com sucesso');\r\n                    };\r\n\r\n                    request.onerror = e => {\r\n\r\n                        console.log('Não foi possível incluir a negociação');\r\n                    };\r\n            });\r\n    }\r\n}"]}
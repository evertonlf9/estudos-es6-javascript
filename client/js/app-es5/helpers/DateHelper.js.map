{"version":3,"sources":["../../app/helpers/DateHelper.js"],"names":["DateHelper","Error","data","getDate","getMonth","getFullYear","date","Date","split"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAAaA,U;AAET,sCAAc;AAAA;;AACV,0BAAM,IAAIC,KAAJ,CAAU,qCAAV,CAAN;AACH;;;;+CAEiBC,I,EAAM;AACpB,+BAAUA,KAAKC,OAAL,EAAV,UAA4BD,KAAKE,QAAL,KAAgB,CAA5C,UAAiDF,KAAKG,WAAL,EAAjD;AACH;;;+CAEiBC,I,EAAM;AACpB,+BAAO,IAAIC,IAAJ,CAASD,KAAKE,KAAL,CAAW,GAAX,CAAT,CAAP;;AAEA;AACA;AACA;;AAEA;AACA;AAEH","file":"DateHelper.js","sourcesContent":["export class DateHelper {\r\n\r\n    constructor() {\r\n        throw new Error('DateHelper não pode ser instanciada');\r\n    }\r\n\r\n    static dateToText(data) {\r\n        return `${data.getDate()}/${data.getMonth()+1}/${data.getFullYear()}`;\r\n    }\r\n\r\n    static textToDate(date) {\r\n        return new Date(date.split('-'));\r\n\r\n        // // mudamos a validação para aceitar o novo formato!\r\n        // if(!/\\d{2}\\/\\d{2}\\/\\d{4}/.test(date)) \r\n        //     throw new Error('Deve estar no formato dd/mm/aaaa');\r\n\r\n        // // veja que usamos no split '/' no lugar de '-'. Usamos `reverse` também para ficar ano/mes/dia.      \r\n        // return new Date(...date.split('/').reverse().map((item, indice) => item - indice % 2));\r\n        \r\n    }\r\n    \r\n}"]}